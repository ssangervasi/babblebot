{
  "author": "",
  "description": "",
  "eventsBasedBehaviors": [
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "SelectionState",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "\"Cards\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ChangeLayer"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "handleHover",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Card::IsFaceUp"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "OriginalScale",
                        "=",
                        "Object.ScaleX()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "OriginalScale",
                        "=",
                        "0"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "OriginalZ",
                        "=",
                        "Object.ZOrder()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "OriginalZ",
                        "=",
                        "0"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "=",
                        "Object.Variable(OriginalZ) + 10"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ChangePlan"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "=",
                            "1.3 * Object.Variable(OriginalScale)"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeScale"
                          }
                        },
                        {
                          "parameters": [
                            "Object",
                            "=",
                            "1.5 * Object.Variable(OriginalScale)"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeScale"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Card::IsSelected"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    },
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "=",
                            "1.1 * Object.Variable(OriginalScale)"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeScale"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": true,
                            "value": "decking::Card::IsSelected"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": true,
                        "value": "SourisSurObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(OriginalScale)"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeScale"
                          }
                        },
                        {
                          "parameters": [
                            "Object",
                            "=",
                            "Object.Variable(OriginalZ)"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangePlan"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "handleHover",
          "functionType": "Action",
          "name": "handleHover",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ handleHover"
        },
        {
          "description": "SetInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"SetInstanceId to \" + ToString(GetArgumentAsNumber(\"InstanceId\")) + \" but id was already \" + ToString(Object.Variable(InstanceId))",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "!=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "=",
                    "GetArgumentAsNumber(\"InstanceId\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "SetInstanceId",
          "functionType": "Action",
          "name": "SetInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ SetInstanceId _PARAM2_"
        },
        {
          "description": "InstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(InstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "InstanceId",
          "functionType": "Expression",
          "name": "InstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ Uid"
        },
        {
          "description": "IsInstance",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object.Behavior::InstanceId()",
                    "=",
                    "GetArgumentAsNumber(\"InstanceId\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsInstance",
          "functionType": "Condition",
          "name": "IsInstance",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ IsInstance _PARAM2_"
        },
        {
          "description": "faceDown",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "\"Back\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetAnimationName"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "faceDown",
          "functionType": "Action",
          "name": "faceDown",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ faceDown"
        },
        {
          "description": "faceUp",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "Object.Behavior::Id()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetAnimationName"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "\"give_compliment\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetAnimationName"
                  }
                },
                {
                  "parameters": [
                    "",
                    "\"Failed animation: \" + Object.Behavior::Id()",
                    "1",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Object.Behavior::Id()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": true,
                    "value": "AnimationName"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "faceUp",
          "functionType": "Action",
          "name": "faceUp",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ faceUp"
        },
        {
          "description": "IsFaceUp",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "\"Back\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "AnimationName"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsFaceUp",
          "functionType": "Condition",
          "name": "IsFaceUp",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsFaceUp"
        },
        {
          "description": "deselect",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "SelectionState",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "deselect",
          "functionType": "Action",
          "name": "deselect",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ deselect"
        },
        {
          "description": "select",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "SelectionState",
                    "=",
                    "\"selected\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "select",
          "functionType": "Action",
          "name": "select",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ select"
        },
        {
          "description": "IsSelected",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "SelectionState",
                    "=",
                    "\"selected\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsSelected",
          "functionType": "Condition",
          "name": "IsSelected",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsSelected"
        },
        {
          "description": "_PARAM_0 Id",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"oh no a card without an id. instance id: \" + ToString(Object.Behavior::InstanceId())",
                    "2",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                  ],
                  "subInstructions": [
                    {
                      "parameters": [
                        "Object",
                        "Id",
                        "=",
                        "\"0\""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      }
                    },
                    {
                      "parameters": [
                        "Object",
                        "Id",
                        "=",
                        "\"\""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      }
                    }
                  ],
                  "type": {
                    "inverted": false,
                    "value": "BuiltinCommonInstructions::Or"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object.VariableString(Id)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Id",
          "functionType": "StringExpression",
          "name": "Id",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "_PARAM0_ Tags",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.VariableString(Tags)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Tags",
          "functionType": "StringExpression",
          "name": "Tags",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "Text",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.VariableString(Text)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Text",
          "functionType": "StringExpression",
          "name": "Text",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "_PARAM0_ Type",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.VariableString(Type)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Type",
          "functionType": "StringExpression",
          "name": "Type",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": ""
        }
      ],
      "fullName": "",
      "name": "Card",
      "objectType": "Sprite",
      "propertyDescriptors": [
        {
          "description": "",
          "extraInformation": [
          ],
          "hidden": false,
          "label": "Id: set object variable to override",
          "name": "Id",
          "type": "String",
          "value": ""
        }
      ]
    },
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "LastDrawnInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\ndeck.cardInstanceIds = []",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            },
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "BuildIndex",
                    "=",
                    "0"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "CardObject",
                    "CardBehavior",
                    "Object.Variable(BuildIndex)",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Card::SetInstanceId"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "BuildIndex",
                    "+",
                    "1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "Behavior",
                        "CardObject",
                        "CardBehavior",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Deck::stackCard"
                      }
                    }
                  ],
                  "conditions": [
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "object": "CardObject",
              "type": "BuiltinCommonInstructions::ForEach"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Deck::shuffle"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "build",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ build with _PARAM2_"
        },
        {
          "description": "stackCard",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "Object",
                    "CardObject"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::LinkObjects"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "CardObject",
                    "CardBehavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Card::faceDown"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "CardObject",
                    "Object",
                    "0",
                    "0"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "MettreAutour"
                  }
                },
                {
                  "parameters": [
                    "CardObject",
                    "=",
                    "Object.ZOrder() - 1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ChangePlan"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "CardInstanceId",
                    "=",
                    "CardObject.CardBehavior::InstanceId()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\nconst instanceIdVar = deck.getVariables().get('CardInstanceId')\nconst instanceId = instanceIdVar.getAsNumber()\nif (deck.cardInstanceIds.includes(instanceId)) {\n    console.warn(\"Deck already includes card\", { instanceId })\n}\ndeck.cardInstanceIds.push(instanceId)",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "fullName": "stackCard",
          "functionType": "Action",
          "name": "stackCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ stackCard _PARAM2_"
        },
        {
          "description": "drawCard",
          "events": [
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\nconst lastDrawnVar = deck.getVariables().get('LastDrawnInstanceId')\nif (deck.cardInstanceIds.length === 0) {\n    console.warn('Tried to draw card from empty deck')\n    lastDrawnVar.setNumber(-1)\n    return\n}\nconst instanceId = deck.cardInstanceIds.pop()\nlastDrawnVar.setNumber(instanceId)",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            },
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "",
                        "Object",
                        "CardObject"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::RemoveLinkBetween"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "CardObject",
                        "CardBehavior",
                        "Object.Behavior::LastDrawnInstanceId()",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Card::IsInstance"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "CardObject",
                            "=",
                            "Object.ZOrder() + 1"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangePlan"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "object": "CardObject",
              "type": "BuiltinCommonInstructions::ForEach"
            }
          ],
          "fullName": "drawCard",
          "functionType": "Action",
          "name": "drawCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ drawCard _PARAM2_"
        },
        {
          "description": "shuffle",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::importLodash"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\ndeck.cardInstanceIds = _.shuffle(deck.cardInstanceIds)",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            },
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "sound\\Cards 2-Shuffle 2.wav",
                    "2",
                    "",
                    "100",
                    "1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "PlaySoundCanal"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "shuffle",
          "functionType": "Action",
          "name": "shuffle",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ shuffle"
        },
        {
          "description": "LastDrawnInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(LastDrawnInstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "LastDrawnInstanceId",
          "functionType": "Expression",
          "name": "LastDrawnInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "Size",
          "events": [
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\neventsFunctionContext.returnValue = deck.cardInstanceIds.length",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            },
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Size",
          "functionType": "Expression",
          "name": "Size",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ Size"
        },
        {
          "description": "IsEmpty",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [deck] = objects\neventsFunctionContext.returnValue = (deck.cardInstanceIds.length === 0)",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "fullName": "IsEmpty",
          "functionType": "Condition",
          "name": "IsEmpty",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsEmpty"
        }
      ],
      "fullName": "",
      "name": "Deck",
      "objectType": "Sprite",
      "propertyDescriptors": [
      ]
    },
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "LastPlayedId",
                    "=",
                    "\"\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "LastDrawnInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "LastPlayedInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "SelectedInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "RequestedInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "Size",
                    "=",
                    "0"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const [hand] = objects\nhand.cardInstanceIds = []",
              "parameterObjects": "Object",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "drawFrom",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "sound\\Cards 3-Draw 1.wav",
                    "1",
                    "",
                    "100",
                    "1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "PlaySoundCanal"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "OriginalSize",
                    "=",
                    "Object.Behavior::Size()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "DeckObject",
                    "DeckBehavior",
                    "CardObject",
                    "CardBehavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Deck::drawCard"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "LastDrawnInstanceId",
                    "=",
                    "DeckObject.DeckBehavior::LastDrawnInstanceId()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "",
                        "Object",
                        "CardObject"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::LinkObjects"
                      }
                    },
                    {
                      "parameters": [
                        "CardObject",
                        "CardBehavior",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Card::faceUp"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "CardObject",
                        "CardBehavior",
                        "Object.Behavior::LastDrawnInstanceId()",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Card::IsInstance"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "object": "CardObject",
              "type": "BuiltinCommonInstructions::ForEach"
            },
            {
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Re-eval size",
              "comment2": "",
              "disabled": false,
              "folded": false,
              "type": "BuiltinCommonInstructions::Comment"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "Size",
                    "=",
                    "Count(CardObject)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "",
                    "CardObject",
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"Drawing card - size went from \" + ToString(Object.Variable(OriginalSize)) + \" to \" + ToString(Object.Behavior::Size())",
                    "1",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object.Variable(OriginalSize)",
                    ">=",
                    "Object.Behavior::Size()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": true,
              "events": [
                {
                  "actions": [
                  ],
                  "conditions": [
                  ],
                  "disabled": true,
                  "events": [
                    {
                      "colorB": 228,
                      "colorG": 176,
                      "colorR": 74,
                      "creationTime": 0,
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "name": "",
                      "parameters": [
                      ],
                      "source": "",
                      "type": "BuiltinCommonInstructions::Group"
                    },
                    {
                      "disabled": false,
                      "eventsSheetExpanded": false,
                      "folded": false,
                      "inlineCode": "// const [hand] = objects\n// const instanceIdVar = hand.getVariables().get('LastDrawnInstanceId')\n// const instanceId = instanceIdVar.getAsNumber()\n// hand.cardInstanceIds.push(instanceId)",
                      "parameterObjects": "Object",
                      "type": "BuiltinCommonInstructions::JsCode",
                      "useStrict": true
                    }
                  ],
                  "folded": true,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "name": "DEP",
              "parameters": [
              ],
              "source": "",
              "type": "BuiltinCommonInstructions::Group"
            }
          ],
          "fullName": "drawFrom",
          "functionType": "Action",
          "name": "drawFrom",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "DeckObject",
              "longDescription": "",
              "name": "DeckObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "DeckBehavior",
              "longDescription": "",
              "name": "DeckBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Deck",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ draw _PARAM2_ from _PARAM4_"
        },
        {
          "description": "handleSelection",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": true,
                    "value": "decking::Hand::IsPlaying"
                  }
                },
                {
                  "parameters": [
                    "",
                    "CardObject",
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "SelectedInstanceId",
                        "=",
                        "CardObject.CardBehavior::InstanceId()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "SourisBouton"
                      }
                    },
                    {
                      "parameters": [
                        "CardObject",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "object": "CardObject",
                  "type": "BuiltinCommonInstructions::ForEach"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "SelectedInstanceId",
                        "=",
                        "-1"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "",
                        "Left"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "MouseButtonReleased"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                  ],
                  "conditions": [
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "CardObject",
                            "CardBehavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Card::select"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object.Behavior::SelectedInstanceId()",
                            "=",
                            "CardObject.CardBehavior::InstanceId()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Egal"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    },
                    {
                      "actions": [
                        {
                          "parameters": [
                            "CardObject",
                            "CardBehavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Card::deselect"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object.Behavior::SelectedInstanceId()",
                            "!=",
                            "CardObject.CardBehavior::InstanceId()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Egal"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "object": "CardObject",
                  "type": "BuiltinCommonInstructions::ForEach"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "handleSelection",
          "functionType": "Action",
          "name": "handleSelection",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ handleSelection _PARAM2_"
        },
        {
          "description": "handlePlayArea",
          "events": [
            {
              "colorB": 228,
              "colorG": 176,
              "colorR": 74,
              "creationTime": 0,
              "disabled": true,
              "events": [
                {
                  "actions": [
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "State",
                        "=",
                        "\"init\""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "PlayAreaObject",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Montre"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object",
                            "Behavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Hand::IsAnySelected"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                        {
                          "actions": [
                          ],
                          "conditions": [
                          ],
                          "disabled": false,
                          "events": [
                          ],
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard"
                        },
                        {
                          "actions": [
                            {
                              "parameters": [
                                "Object",
                                "State",
                                "=",
                                "\"play_requested\""
                              ],
                              "subInstructions": [
                              ],
                              "type": {
                                "inverted": false,
                                "value": "ModVarObjetTxt"
                              }
                            }
                          ],
                          "conditions": [
                            {
                              "parameters": [
                                "",
                                "Left"
                              ],
                              "subInstructions": [
                              ],
                              "type": {
                                "inverted": false,
                                "value": "MouseButtonReleased"
                              }
                            },
                            {
                              "parameters": [
                                "PlayAreaObject",
                                "",
                                "",
                                ""
                              ],
                              "subInstructions": [
                              ],
                              "type": {
                                "inverted": false,
                                "value": "SourisSurObjet"
                              }
                            }
                          ],
                          "disabled": false,
                          "events": [
                            {
                              "actions": [
                                {
                                  "parameters": [
                                    "PlayAreaObject",
                                    "SlotBehavior",
                                    "Object.Behavior::SelectedInstanceId()",
                                    ""
                                  ],
                                  "subInstructions": [
                                  ],
                                  "type": {
                                    "inverted": false,
                                    "value": "decking::Slot::slotCard"
                                  }
                                }
                              ],
                              "conditions": [
                              ],
                              "disabled": true,
                              "events": [
                              ],
                              "folded": false,
                              "type": "BuiltinCommonInstructions::Standard"
                            }
                          ],
                          "folded": false,
                          "type": "BuiltinCommonInstructions::Standard"
                        }
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "State",
                        "=",
                        "\"init\""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjetTxt"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "State",
                        "=",
                        "\"play_finished\""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "VarObjetTxt"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "PlayAreaObject"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Cache"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "name": "DEP",
              "parameters": [
              ],
              "source": "",
              "type": "BuiltinCommonInstructions::Group"
            }
          ],
          "fullName": "handlePlayArea",
          "functionType": "Action",
          "name": "handlePlayArea",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "PlayAreaObject",
              "longDescription": "",
              "name": "PlayAreaObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "SlotBehavior",
              "longDescription": "",
              "name": "SlotBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ handlePlayArea _PARAM2_"
        },
        {
          "description": "handlePlayCard",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_requested\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "OriginalSize",
                        "=",
                        "Object.Behavior::Size()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "",
                        "CardObject",
                        "Object"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "Behavior",
                            "CardObject.CardBehavior::InstanceId()",
                            "CardObject.CardBehavior::Id()",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Hand::startPlaying"
                          }
                        },
                        {
                          "parameters": [
                            "",
                            "Object",
                            "CardObject"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "LinkedObjects::RemoveLinkBetween"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "CardObject",
                            "CardBehavior",
                            "Object.Behavior::RequestedInstanceId()",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Card::IsInstance"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "object": "CardObject",
                      "type": "BuiltinCommonInstructions::ForEach"
                    }
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "color": {
                    "b": 109,
                    "g": 230,
                    "r": 255,
                    "textB": 0,
                    "textG": 0,
                    "textR": 0
                  },
                  "comment": "Re-eval size",
                  "comment2": "",
                  "disabled": false,
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Comment"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "Size",
                        "=",
                        "Count(CardObject)"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "",
                        "CardObject",
                        "Object"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "LinkedObjects::PickObjectsLinkedTo"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "",
                        "\"Playing card - size went from \" + ToString(Object.Variable(OriginalSize)) + \" to \" + ToString(Object.Behavior::Size())",
                        "1",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "utils::log"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object.Variable(OriginalSize)",
                        "<=",
                        "Object.Behavior::Size()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Egal"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "RequestedInstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_finished\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "handlePlayCard",
          "functionType": "Action",
          "name": "handlePlayCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "PoolObject",
              "longDescription": "",
              "name": "PoolObject",
              "optional": false,
              "supplementaryInformation": "",
              "type": "objectList"
            }
          ],
          "sentence": "_PARAM0_ handlePlayCard _PARAM2_ (_PARAM4_)"
        },
        {
          "description": "requestPlay",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_requested\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "RequestedInstanceId",
                        "=",
                        "GetArgumentAsNumber(\"InstanceId\")"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    }
                  ],
                  "conditions": [
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "requestPlay",
          "functionType": "Action",
          "name": "requestPlay",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ requestPlay _PARAM2_"
        },
        {
          "description": "startPlaying",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"startPlaying when no play was requested\"",
                    "2",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "!=",
                    "\"play_requested\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "LastPlayedInstanceId",
                    "=",
                    "GetArgumentAsNumber(\"InstanceId\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "LastPlayedId",
                    "=",
                    "GetArgumentAsString(\"Id\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_started\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "startPlaying",
          "functionType": "Action",
          "name": "startPlaying",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Card Id",
              "longDescription": "",
              "name": "Id",
              "optional": false,
              "supplementaryInformation": "",
              "type": "string"
            }
          ],
          "sentence": "_PARAM0_ startPlaying _PARAM2_ _PARAM3_"
        },
        {
          "description": "finishPlaying",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"finishedPlaying when no card was played\"",
                    "2",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "!=",
                    "\"play_started\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_finished\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "finishPlaying",
          "functionType": "Action",
          "name": "finishPlaying",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ finishPlaying"
        },
        {
          "description": "fitIntoSlots",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "SlotObject",
                        "SlotBehavior",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Slot::removeCard"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "SlotObject.SlotBehavior::SlottedInstanceId()",
                        "=",
                        "Object.Behavior::LastPlayedInstanceId()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Egal"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "object": "SlotObject",
              "type": "BuiltinCommonInstructions::ForEach"
            },
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "",
                    "CardObject",
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "",
                        "\"slot - linked cards: \" + ToString(Count(CardObject))",
                        "0",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "utils::log"
                      }
                    }
                  ],
                  "conditions": [
                  ],
                  "disabled": true,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "CardObject",
                        "CardBehavior",
                        "Object.Behavior::RequestedInstanceId()",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": true,
                        "value": "decking::Card::IsInstance"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "FoundSlotId",
                            "=",
                            "-1"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    },
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "FoundSlotId",
                            "=",
                            "SlotObject.SlotBehavior::Id()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "CardObject.CardBehavior::InstanceId()",
                            "=",
                            "SlotObject.SlotBehavior::SlottedInstanceId()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Egal"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "object": "SlotObject",
                      "type": "BuiltinCommonInstructions::ForEach"
                    },
                    {
                      "actions": [
                        {
                          "parameters": [
                            "Object",
                            "FoundSlotId",
                            "=",
                            "SlotObject.SlotBehavior::Id()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ModVarObjet"
                          }
                        },
                        {
                          "parameters": [
                            "SlotObject",
                            "SlotBehavior",
                            "CardObject.CardBehavior::InstanceId()",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "decking::Slot::slotCard"
                          }
                        }
                      ],
                      "conditions": [
                        {
                          "parameters": [
                            "Object.Variable(FoundSlotId)",
                            "=",
                            "-1"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "Egal"
                          }
                        },
                        {
                          "parameters": [
                            "SlotObject",
                            "SlotBehavior",
                            ""
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": true,
                            "value": "decking::Slot::IsFilled"
                          }
                        }
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "object": "SlotObject",
                      "type": "BuiltinCommonInstructions::ForEach"
                    },
                    {
                      "actions": [
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "object": "CardObject",
                  "type": "BuiltinCommonInstructions::ForEach"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "fitIntoSlots",
          "functionType": "Action",
          "name": "fitIntoSlots",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "SlotObject",
              "longDescription": "",
              "name": "SlotObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "SlotBehavior",
              "longDescription": "",
              "name": "SlotBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ fitIntoSlots _PARAM2_ _PARAM4_"
        },
        {
          "description": "IsPlaying - call finishPlaying after handling this",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"play_started\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsPlaying",
          "functionType": "Condition",
          "name": "IsPlaying",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsPlaying"
        },
        {
          "description": "IsLastPlayed",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "CardObject",
                    "CardBehavior",
                    "Object.Behavior::LastPlayedInstanceId()",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Card::IsInstance"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsLastPlayed",
          "functionType": "Condition",
          "name": "IsLastPlayed",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsLastPlayed _PARAM2_ "
        },
        {
          "description": "IsAnySelected",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object.Behavior::SelectedInstanceId()",
                    ">",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsAnySelected",
          "functionType": "Condition",
          "name": "IsAnySelected",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsAnySelected"
        },
        {
          "description": "RequestedInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(RequestedInstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "RequestedInstanceId",
          "functionType": "Expression",
          "name": "RequestedInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "LastPlayedInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(SelectedInstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "LastPlayedInstanceId",
          "functionType": "Expression",
          "name": "SelectedInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "LastPlayedId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.VariableString(LastPlayedId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnString"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "LastPlayedId",
          "functionType": "StringExpression",
          "name": "LastPlayedId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsLastPlayed _PARAM2_ "
        },
        {
          "description": "LastPlayedInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(LastPlayedInstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "LastPlayedInstanceId",
          "functionType": "Expression",
          "name": "LastPlayedInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "LastDrawnInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(LastDrawnInstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "LastDrawnInstanceId",
          "functionType": "Expression",
          "name": "LastDrawnInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "Size",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(Size)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Size",
          "functionType": "Expression",
          "name": "Size",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Hand",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ Size"
        }
      ],
      "fullName": "",
      "name": "Hand",
      "objectType": "",
      "propertyDescriptors": [
      ]
    },
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    "+",
                    "1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Slot::SetPropertyLastId"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "Id",
                    "=",
                    "Object.Behavior::PropertyLastId()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Id",
                    "<=",
                    "0"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjet"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "Id",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(Id)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Id",
          "functionType": "Expression",
          "name": "Id",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "SlottedInstanceId",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(InstanceId)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "SlottedInstanceId",
          "functionType": "Expression",
          "name": "SlottedInstanceId",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "removeCard",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"removing card but slot has no InstanceId\"",
                    "1",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": true,
                    "value": "decking::Slot::IsFilled"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"removed\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "removeCard",
          "functionType": "Action",
          "name": "removeCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ removeCard"
        },
        {
          "description": "slotCard",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    "\"slotting card \" + ToString(GetArgumentAsNumber(\"InstanceId\"))  + \" when slot already has instance \" + ToString(Object.Behavior::SlottedInstanceId())",
                    "1",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "utils::log"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Slot::IsFilled"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "InstanceId",
                    "=",
                    "GetArgumentAsNumber(\"InstanceId\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjet"
                  }
                },
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"slotted\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "slotCard",
          "functionType": "Action",
          "name": "slotCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ slotCard _PARAM2_"
        },
        {
          "description": "handleCard",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"handled\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"slotted\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "CardObject",
                        "CardBehavior",
                        "Object.Behavior::SlottedInstanceId()",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "decking::Card::IsInstance"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                    {
                      "actions": [
                        {
                          "parameters": [
                            "CardObject",
                            "=",
                            "Object.Width()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeWidth"
                          }
                        },
                        {
                          "parameters": [
                            "CardObject",
                            "=",
                            "Object.Height()"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangeHeight"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    },
                    {
                      "actions": [
                        {
                          "parameters": [
                            "CardObject",
                            "Object",
                            "0",
                            "0"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "MettreAutour"
                          }
                        },
                        {
                          "parameters": [
                            "CardObject",
                            "=",
                            "Object.ZOrder() + 1"
                          ],
                          "subInstructions": [
                          ],
                          "type": {
                            "inverted": false,
                            "value": "ChangePlan"
                          }
                        }
                      ],
                      "conditions": [
                      ],
                      "disabled": false,
                      "events": [
                      ],
                      "folded": false,
                      "type": "BuiltinCommonInstructions::Standard"
                    }
                  ],
                  "folded": false,
                  "object": "CardObject",
                  "type": "BuiltinCommonInstructions::ForEach"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "handleCard",
          "functionType": "Action",
          "name": "handleCard",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardObject",
              "longDescription": "",
              "name": "CardObject",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "objectList"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "CardBehavior",
              "longDescription": "",
              "name": "CardBehavior",
              "optional": false,
              "supplementaryInformation": "decking::Card",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ handleCard _PARAM2_ "
        },
        {
          "description": "IsFilledWith",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Slot::IsFilled"
                  }
                },
                {
                  "parameters": [
                    "Object.Behavior::SlottedInstanceId()",
                    "=",
                    "GetArgumentAsNumber(\"InstanceId\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsFilledWith",
          "functionType": "Condition",
          "name": "IsFilledWith",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "InstanceId",
              "longDescription": "",
              "name": "InstanceId",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ IsFilledWith _PARAM2_"
        },
        {
          "description": "IsFilled",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "False"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "True"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnBoolean"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object.Behavior::SlottedInstanceId()",
                    "!=",
                    "-1"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "IsFilled",
          "functionType": "Condition",
          "name": "IsFilled",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "Sprite",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Slot",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ IsFilled"
        }
      ],
      "fullName": "",
      "name": "Slot",
      "objectType": "Sprite",
      "propertyDescriptors": [
        {
          "description": "",
          "extraInformation": [
          ],
          "hidden": true,
          "label": "LastId",
          "name": "LastId",
          "type": "Number",
          "value": "0"
        }
      ]
    },
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Cache"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "onCreated",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::PlayArea",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "",
          "events": [
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"active\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "=",
                        "1.1 * Object.Variable(OriginalScale)"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ChangeScale"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "SourisSurObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                },
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        "=",
                        "Object.Variable(OriginalScale)"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ChangeScale"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object",
                        "",
                        "",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": true,
                        "value": "SourisSurObjet"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::PlayArea",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "activate",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"active\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      }
                    },
                    {
                      "parameters": [
                        "Object",
                        "OriginalScale",
                        "=",
                        "Object.ScaleX()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    },
                    {
                      "parameters": [
                        "Object",
                        "OriginalZ",
                        "=",
                        "Object.ZOrder()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ModVarObjet"
                      }
                    },
                    {
                      "parameters": [
                        "Object",
                        "=",
                        "1.5 * Object.Variable(OriginalScale)"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "ChangeScale"
                      }
                    }
                  ],
                  "conditions": [
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "activate",
          "functionType": "Action",
          "name": "activate",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::PlayArea",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ activate"
        },
        {
          "description": "deactivate",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"init\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarObjetTxt"
                  }
                },
                {
                  "parameters": [
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Cache"
                  }
                }
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object",
                    "State",
                    "=",
                    "\"active\""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "VarObjetTxt"
                  }
                }
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "deactivate",
          "functionType": "Action",
          "name": "deactivate",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::PlayArea",
              "type": "behavior"
            }
          ],
          "sentence": "_PARAM0_ deactivate"
        }
      ],
      "fullName": "",
      "name": "PlayArea",
      "objectType": "",
      "propertyDescriptors": [
      ]
    },
    {
      "description": "",
      "eventsFunctions": [
        {
          "description": "",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Cache"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "Object.Behavior::Threshold()",
                    "<",
                    "0"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object.Behavior::PropertyMood()",
                        "<=",
                        "Object.Behavior::Threshold()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Egal"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
              ],
              "conditions": [
                {
                  "parameters": [
                    "0",
                    "<=",
                    "Object.Behavior::Threshold()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "Egal"
                  }
                }
              ],
              "disabled": false,
              "events": [
                {
                  "actions": [
                    {
                      "parameters": [
                        "Object",
                        ""
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Montre"
                      }
                    }
                  ],
                  "conditions": [
                    {
                      "parameters": [
                        "Object.Behavior::Threshold()",
                        "<=",
                        "Object.Behavior::PropertyMood()"
                      ],
                      "subInstructions": [
                      ],
                      "type": {
                        "inverted": false,
                        "value": "Egal"
                      }
                    }
                  ],
                  "disabled": false,
                  "events": [
                  ],
                  "folded": false,
                  "type": "BuiltinCommonInstructions::Standard"
                }
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "",
          "functionType": "Action",
          "name": "doStepPreEvents",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Heart",
              "type": "behavior"
            }
          ],
          "sentence": ""
        },
        {
          "description": "updateMood",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object",
                    "Behavior",
                    "=",
                    "GetArgumentAsNumber(\"Mood\")"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::Heart::SetPropertyMood"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "updateMood",
          "functionType": "Action",
          "name": "updateMood",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Heart",
              "type": "behavior"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Mood",
              "longDescription": "",
              "name": "Mood",
              "optional": false,
              "supplementaryInformation": "",
              "type": "expression"
            }
          ],
          "sentence": "_PARAM0_ updateMood _PARAM2_"
        },
        {
          "description": "_PARAM0_ Threshold",
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "Object.Variable(Threshold)"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "SetReturnNumber"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            }
          ],
          "fullName": "Threshold",
          "functionType": "Expression",
          "name": "Threshold",
          "objectGroups": [
          ],
          "parameters": [
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Object",
              "longDescription": "",
              "name": "Object",
              "optional": false,
              "supplementaryInformation": "",
              "type": "object"
            },
            {
              "codeOnly": false,
              "defaultValue": "",
              "description": "Behavior",
              "longDescription": "",
              "name": "Behavior",
              "optional": false,
              "supplementaryInformation": "decking::Heart",
              "type": "behavior"
            }
          ],
          "sentence": ""
        }
      ],
      "fullName": "",
      "name": "Heart",
      "objectType": "",
      "propertyDescriptors": [
        {
          "description": "",
          "extraInformation": [
          ],
          "hidden": false,
          "label": "Mood",
          "name": "Mood",
          "type": "Number",
          "value": "0"
        },
        {
          "description": "",
          "extraInformation": [
          ],
          "hidden": false,
          "label": "Threshold: set instance variable",
          "name": "Threshold",
          "type": "Number",
          "value": "10"
        }
      ]
    }
  ],
  "eventsFunctions": [
    {
      "description": "importCardScoresJs",
      "events": [
        {
          "actions": [
          ],
          "conditions": [
            {
              "parameters": [
              ],
              "subInstructions": [
              ],
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              }
            }
          ],
          "disabled": false,
          "events": [
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "function t(t){return t&&\"object\"==typeof t&&\"default\"in t?t:{default:t}}var e=t(require(\"stream\")),i=class{constructor(t=100){this.size=t,this.length=0,this.buf=Buffer.alloc(t)}prepend(t){if(Buffer.isBuffer(t)){const e=this.length+t.length;if(e>=this.size&&(this.resize(),e>=this.size))throw Error(\"INVALID_BUFFER_STATE\");const i=this.buf;this.buf=Buffer.alloc(this.size),t.copy(this.buf,0),i.copy(this.buf,t.length),this.length+=t.length}else{const e=this.length++;e===this.size&&this.resize();const i=this.clone();this.buf[0]=t,i.copy(this.buf,1,0,e)}}append(t){const e=this.length++;e===this.size&&this.resize(),this.buf[e]=t}clone(){return Buffer.from(this.buf.slice(0,this.length))}resize(){const t=this.length;this.size=2*this.size;const e=Buffer.alloc(this.size);this.buf.copy(e,0,0,t),this.buf=e}toString(t){return t?this.buf.slice(0,this.length).toString(t):Uint8Array.prototype.slice.call(this.buf.slice(0,this.length))}toJSON(){return this.toString(\"utf8\")}reset(){this.length=0}};const{Transform:n}=e.default,o={utf8:Buffer.from([239,187,191]),utf16le:Buffer.from([255,254])};class r extends n{constructor(t={}){super({readableObjectMode:!0,...t,encoding:null}),this.__originalOptions=t,this.__normalizeOptions(t)}__normalizeOptions(t){const e={};for(let i in t)e[f(i)]=t[i];if(void 0===e.encoding||!0===e.encoding)e.encoding=\"utf8\";else if(null===e.encoding||!1===e.encoding)e.encoding=null;else if(\"string\"!=typeof e.encoding&&null!==e.encoding)throw new l(\"CSV_INVALID_OPTION_ENCODING\",[\"Invalid option encoding:\",\"encoding must be a string or null to return a buffer,\",`got ${JSON.stringify(e.encoding)}`],e);if(null==e.bom||!1===e.bom)e.bom=!1;else if(!0!==e.bom)throw new l(\"CSV_INVALID_OPTION_BOM\",[\"Invalid option bom:\",\"bom must be true,\",`got ${JSON.stringify(e.bom)}`],e);let n=null;if(null==e.cast||!1===e.cast||\"\"===e.cast)e.cast=void 0;else if(\"function\"==typeof e.cast)n=e.cast,e.cast=!0;else if(!0!==e.cast)throw new l(\"CSV_INVALID_OPTION_CAST\",[\"Invalid option cast:\",\"cast must be true or a function,\",`got ${JSON.stringify(e.cast)}`],e);if(null==e.cast_date||!1===e.cast_date||\"\"===e.cast_date)e.cast_date=!1;else if(!0===e.cast_date)e.cast_date=function(t){const e=Date.parse(t);return isNaN(e)?t:new Date(e)};else if(\"function\"!=typeof e.cast_date)throw new l(\"CSV_INVALID_OPTION_CAST_DATE\",[\"Invalid option cast_date:\",\"cast_date must be true or a function,\",`got ${JSON.stringify(e.cast_date)}`],e);let o=null;if(!0===e.columns)o=void 0;else if(\"function\"==typeof e.columns)o=e.columns,e.columns=!0;else if(Array.isArray(e.columns))e.columns=u(e.columns);else{if(null!=e.columns&&!1!==e.columns)throw new l(\"CSV_INVALID_OPTION_COLUMNS\",[\"Invalid option columns:\",\"expect an object, a function or true,\",`got ${JSON.stringify(e.columns)}`],e);e.columns=!1}if(null==e.columns_duplicates_to_array||!1===e.columns_duplicates_to_array)e.columns_duplicates_to_array=!1;else if(!0!==e.columns_duplicates_to_array)throw new l(\"CSV_INVALID_OPTION_COLUMNS_DUPLICATES_TO_ARRAY\",[\"Invalid option columns_duplicates_to_array:\",\"expect an boolean,\",`got ${JSON.stringify(e.columns_duplicates_to_array)}`],e);if(null==e.comment||!1===e.comment||\"\"===e.comment)e.comment=null;else if(\"string\"==typeof e.comment&&(e.comment=Buffer.from(e.comment,e.encoding)),!Buffer.isBuffer(e.comment))throw new l(\"CSV_INVALID_OPTION_COMMENT\",[\"Invalid option comment:\",\"comment must be a buffer or a string,\",`got ${JSON.stringify(e.comment)}`],e);const r=JSON.stringify(e.delimiter);if(Array.isArray(e.delimiter)||(e.delimiter=[e.delimiter]),0===e.delimiter.length)throw new l(\"CSV_INVALID_OPTION_DELIMITER\",[\"Invalid option delimiter:\",\"delimiter must be a non empty string or buffer or array of string|buffer,\",`got ${r}`],e);if(e.delimiter=e.delimiter.map(function(t){if(null==t||!1===t)return Buffer.from(\",\",e.encoding);if(\"string\"==typeof t&&(t=Buffer.from(t,e.encoding)),!Buffer.isBuffer(t)||0===t.length)throw new l(\"CSV_INVALID_OPTION_DELIMITER\",[\"Invalid option delimiter:\",\"delimiter must be a non empty string or buffer or array of string|buffer,\",`got ${r}`],e);return t}),void 0===e.escape||!0===e.escape?e.escape=Buffer.from('\"',e.encoding):\"string\"==typeof e.escape?e.escape=Buffer.from(e.escape,e.encoding):null!==e.escape&&!1!==e.escape||(e.escape=null),null!==e.escape&&!Buffer.isBuffer(e.escape))throw new Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(e.escape)}`);if(null==e.from)e.from=1;else{if(\"string\"==typeof e.from&&/\\d+/.test(e.from)&&(e.from=parseInt(e.from)),!Number.isInteger(e.from))throw new Error(`Invalid Option: from must be an integer, got ${JSON.stringify(e.from)}`);if(e.from<0)throw new Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(t.from)}`)}if(null==e.from_line)e.from_line=1;else{if(\"string\"==typeof e.from_line&&/\\d+/.test(e.from_line)&&(e.from_line=parseInt(e.from_line)),!Number.isInteger(e.from_line))throw new Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(t.from_line)}`);if(e.from_line<=0)throw new Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(t.from_line)}`)}if(null==e.ignore_last_delimiters)e.ignore_last_delimiters=!1;else if(\"number\"==typeof e.ignore_last_delimiters)e.ignore_last_delimiters=Math.floor(e.ignore_last_delimiters),0===e.ignore_last_delimiters&&(e.ignore_last_delimiters=!1);else if(\"boolean\"!=typeof e.ignore_last_delimiters)throw new l(\"CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS\",[\"Invalid option `ignore_last_delimiters`:\",\"the value must be a boolean value or an integer,\",`got ${JSON.stringify(e.ignore_last_delimiters)}`],e);if(!0===e.ignore_last_delimiters&&!1===e.columns)throw new l(\"CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS\",[\"The option `ignore_last_delimiters`\",\"requires the activation of the `columns` option\"],e);if(null==e.info||!1===e.info)e.info=!1;else if(!0!==e.info)throw new Error(`Invalid Option: info must be true, got ${JSON.stringify(e.info)}`);if(null==e.max_record_size||!1===e.max_record_size)e.max_record_size=0;else if(Number.isInteger(e.max_record_size)&&e.max_record_size>=0);else{if(\"string\"!=typeof e.max_record_size||!/\\d+/.test(e.max_record_size))throw new Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(e.max_record_size)}`);e.max_record_size=parseInt(e.max_record_size)}if(null==e.objname||!1===e.objname)e.objname=void 0;else if(Buffer.isBuffer(e.objname)){if(0===e.objname.length)throw new Error(\"Invalid Option: objname must be a non empty buffer\");null===e.encoding||(e.objname=e.objname.toString(e.encoding))}else{if(\"string\"!=typeof e.objname)throw new Error(`Invalid Option: objname must be a string or a buffer, got ${e.objname}`);if(0===e.objname.length)throw new Error(\"Invalid Option: objname must be a non empty string\")}if(null==e.on_record)e.on_record=void 0;else if(\"function\"!=typeof e.on_record)throw new l(\"CSV_INVALID_OPTION_ON_RECORD\",[\"Invalid option `on_record`:\",\"expect a function,\",`got ${JSON.stringify(e.on_record)}`],e);if(null===e.quote||!1===e.quote||\"\"===e.quote)e.quote=null;else if(void 0===e.quote||!0===e.quote?e.quote=Buffer.from('\"',e.encoding):\"string\"==typeof e.quote&&(e.quote=Buffer.from(e.quote,e.encoding)),!Buffer.isBuffer(e.quote))throw new Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(e.quote)}`);if(null==e.raw||!1===e.raw)e.raw=!1;else if(!0!==e.raw)throw new Error(`Invalid Option: raw must be true, got ${JSON.stringify(e.raw)}`);if(e.record_delimiter?Array.isArray(e.record_delimiter)||(e.record_delimiter=[e.record_delimiter]):e.record_delimiter=[],e.record_delimiter=e.record_delimiter.map(function(t){return\"string\"==typeof t&&(t=Buffer.from(t,e.encoding)),t}),\"boolean\"==typeof e.relax);else{if(null!=e.relax)throw new Error(`Invalid Option: relax must be a boolean, got ${JSON.stringify(e.relax)}`);e.relax=!1}if(\"boolean\"==typeof e.relax_column_count);else{if(null!=e.relax_column_count)throw new Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(e.relax_column_count)}`);e.relax_column_count=!1}if(\"boolean\"==typeof e.relax_column_count_less);else{if(null!=e.relax_column_count_less)throw new Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(e.relax_column_count_less)}`);e.relax_column_count_less=!1}if(\"boolean\"==typeof e.relax_column_count_more);else{if(null!=e.relax_column_count_more)throw new Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(e.relax_column_count_more)}`);e.relax_column_count_more=!1}if(\"boolean\"==typeof e.skip_empty_lines);else{if(null!=e.skip_empty_lines)throw new Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(e.skip_empty_lines)}`);e.skip_empty_lines=!1}if(\"boolean\"==typeof e.skip_lines_with_empty_values);else{if(null!=e.skip_lines_with_empty_values)throw new Error(`Invalid Option: skip_lines_with_empty_values must be a boolean, got ${JSON.stringify(e.skip_lines_with_empty_values)}`);e.skip_lines_with_empty_values=!1}if(\"boolean\"==typeof e.skip_lines_with_error);else{if(null!=e.skip_lines_with_error)throw new Error(`Invalid Option: skip_lines_with_error must be a boolean, got ${JSON.stringify(e.skip_lines_with_error)}`);e.skip_lines_with_error=!1}if(null==e.rtrim||!1===e.rtrim)e.rtrim=!1;else if(!0!==e.rtrim)throw new Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(e.rtrim)}`);if(null==e.ltrim||!1===e.ltrim)e.ltrim=!1;else if(!0!==e.ltrim)throw new Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(e.ltrim)}`);if(null==e.trim||!1===e.trim)e.trim=!1;else if(!0!==e.trim)throw new Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(e.trim)}`);if(!0===e.trim&&!1!==t.ltrim?e.ltrim=!0:!0!==e.ltrim&&(e.ltrim=!1),!0===e.trim&&!1!==t.rtrim?e.rtrim=!0:!0!==e.rtrim&&(e.rtrim=!1),null==e.to)e.to=-1;else{if(\"string\"==typeof e.to&&/\\d+/.test(e.to)&&(e.to=parseInt(e.to)),!Number.isInteger(e.to))throw new Error(`Invalid Option: to must be an integer, got ${JSON.stringify(t.to)}`);if(e.to<=0)throw new Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(t.to)}`)}if(null==e.to_line)e.to_line=-1;else{if(\"string\"==typeof e.to_line&&/\\d+/.test(e.to_line)&&(e.to_line=parseInt(e.to_line)),!Number.isInteger(e.to_line))throw new Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(t.to_line)}`);if(e.to_line<=0)throw new Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(t.to_line)}`)}this.info={comment_lines:0,empty_lines:0,invalid_field_length:0,lines:1,records:0},this.options=e,this.state={bomSkipped:!1,castField:n,commenting:!1,error:void 0,enabled:1===e.from_line,escaping:!1,escapeIsQuote:Buffer.isBuffer(e.escape)&&Buffer.isBuffer(e.quote)&&0===Buffer.compare(e.escape,e.quote),expectedRecordLength:null===e.columns?0:e.columns.length,field:new i(20),firstLineToHeaders:o,info:Object.assign({},this.info),needMoreDataSize:Math.max(null!==e.comment?e.comment.length:0,...e.delimiter.map(t=>t.length),null!==e.quote?e.quote.length:0),previousBuf:void 0,quoting:!1,stop:!1,rawBuffer:new i(100),record:[],recordHasError:!1,record_length:0,recordDelimiterMaxLength:0===e.record_delimiter.length?2:Math.max(...e.record_delimiter.map(t=>t.length)),trimChars:[Buffer.from(\" \",e.encoding)[0],Buffer.from(\"\\t\",e.encoding)[0]],wasQuoting:!1,wasRowDelimiter:!1}}_transform(t,e,i){if(!0===this.state.stop)return;const n=this.__parse(t,!1);void 0!==n&&(this.state.stop=!0),i(n)}_flush(t){!0!==this.state.stop&&t(this.__parse(void 0,!0))}__parse(t,e){const{bom:i,comment:n,escape:r,from_line:s,info:a,ltrim:f,max_record_size:c,quote:_,raw:u,relax:h,rtrim:m,skip_empty_lines:d,to:g,to_line:p}=this.options;let{record_delimiter:w}=this.options;const{bomSkipped:b,previousBuf:v,rawBuffer:y,escapeIsQuote:O}=this.state;let I;if(void 0===v){if(void 0===t)return void this.push(null);I=t}else I=void 0!==v&&void 0===t?v:Buffer.concat([v,t]);if(!1===b)if(!1===i)this.state.bomSkipped=!0;else if(I.length<3){if(!1===e)return void(this.state.previousBuf=I)}else{for(let t in o)if(0===o[t].compare(I,0,o[t].length)){I=I.slice(o[t].length),this.__normalizeOptions({...this.__originalOptions,encoding:t});break}this.state.bomSkipped=!0}const N=I.length;let S;for(S=0;S<N&&!this.__needMoreData(S,N,e);S++){if(!0===this.state.wasRowDelimiter&&(this.info.lines++,!0===a&&0===this.state.record.length&&0===this.state.field.length&&!1===this.state.wasQuoting&&(this.state.info=Object.assign({},this.info)),this.state.wasRowDelimiter=!1),-1!==p&&this.info.lines>p)return this.state.stop=!0,void this.push(null);!1===this.state.quoting&&0===w.length&&this.__autoDiscoverRecordDelimiter(I,S)&&(w=this.options.record_delimiter);const t=I[S];if(!0===u&&y.append(t),13!==t&&10!==t||!1!==this.state.wasRowDelimiter||(this.state.wasRowDelimiter=!0),!0===this.state.escaping)this.state.escaping=!1;else{if(null!==r&&!0===this.state.quoting&&this.__isEscape(I,S,t)&&S+r.length<N){if(!O){this.state.escaping=!0,S+=r.length-1;continue}if(this.__isQuote(I,S+r.length)){this.state.escaping=!0,S+=r.length-1;continue}}if(!1===this.state.commenting&&this.__isQuote(I,S))if(!0===this.state.quoting){const e=I[S+_.length],i=m&&this.__isCharTrimable(e),o=null!==n&&this.__compareBytes(n,I,S+_.length,e),s=this.__isDelimiter(I,S+_.length,e),a=0===w.length?this.__autoDiscoverRecordDelimiter(I,S+_.length):this.__isRecordDelimiter(e,I,S+_.length);if(null!==r&&this.__isEscape(I,S,t)&&this.__isQuote(I,S+r.length))S+=r.length-1;else{if(!e||s||a||o||i){this.state.quoting=!1,this.state.wasQuoting=!0,S+=_.length-1;continue}if(!1===h){const t=this.__error(new l(\"CSV_INVALID_CLOSING_QUOTE\",[\"Invalid Closing Quote:\",`got \"${String.fromCharCode(e)}\"`,`at line ${this.info.lines}`,\"instead of delimiter, record delimiter, trimable character\",\"(if activated) or comment\"],this.options,this.__context()));if(void 0!==t)return t}else this.state.quoting=!1,this.state.wasQuoting=!0,this.state.field.prepend(_),S+=_.length-1}}else{if(0===this.state.field.length){this.state.quoting=!0,S+=_.length-1;continue}if(!1===h){const t=this.__error(new l(\"INVALID_OPENING_QUOTE\",[\"Invalid Opening Quote:\",`a quote is found inside a field at line ${this.info.lines}`],this.options,this.__context(),{field:this.state.field}));if(void 0!==t)return t}}if(!1===this.state.quoting){let e=this.__isRecordDelimiter(t,I,S);if(0!==e){if(this.state.commenting&&!1===this.state.wasQuoting&&0===this.state.record.length&&0===this.state.field.length)this.info.comment_lines++;else{if(!1===this.state.enabled&&this.info.lines+(!0===this.state.wasRowDelimiter?1:0)>=s){this.state.enabled=!0,this.__resetField(),this.__resetRecord(),S+=e-1;continue}if(!0===d&&!1===this.state.wasQuoting&&0===this.state.record.length&&0===this.state.field.length){this.info.empty_lines++,S+=e-1;continue}const t=this.__onField();if(void 0!==t)return t;const i=this.__onRecord();if(void 0!==i)return i;if(-1!==g&&this.info.records>=g)return this.state.stop=!0,void this.push(null)}this.state.commenting=!1,S+=e-1;continue}if(this.state.commenting)continue;if(0!==(null===n?0:this.__compareBytes(n,I,S,t))){this.state.commenting=!0;continue}let i=this.__isDelimiter(I,S,t);if(0!==i){const t=this.__onField();if(void 0!==t)return t;S+=i-1;continue}}}if(!1===this.state.commenting&&0!==c&&this.state.record_length+this.state.field.length>c){const t=this.__error(new l(\"CSV_MAX_RECORD_SIZE\",[\"Max Record Size:\",\"record exceed the maximum number of tolerated bytes\",`of ${c}`,`at line ${this.info.lines}`],this.options,this.__context()));if(void 0!==t)return t}const e=!1===f||!0===this.state.quoting||0!==this.state.field.length||!this.__isCharTrimable(t),i=!1===m||!1===this.state.wasQuoting;if(!0===e&&!0===i)this.state.field.append(t);else if(!0===m&&!this.__isCharTrimable(t)){const t=this.__error(new l(\"CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE\",[\"Invalid Closing Quote:\",\"found non trimable byte after quote\",`at line ${this.info.lines}`],this.options,this.__context()));if(void 0!==t)return t}}if(!0===e)if(!0===this.state.quoting){const t=this.__error(new l(\"CSV_QUOTE_NOT_CLOSED\",[\"Quote Not Closed:\",`the parsing is finished with an opening quote at line ${this.info.lines}`],this.options,this.__context()));if(void 0!==t)return t}else if(!0===this.state.wasQuoting||0!==this.state.record.length||0!==this.state.field.length){const t=this.__onField();if(void 0!==t)return t;const e=this.__onRecord();if(void 0!==e)return e}else!0===this.state.wasRowDelimiter?this.info.empty_lines++:!0===this.state.commenting&&this.info.comment_lines++;else this.state.previousBuf=I.slice(S);!0===this.state.wasRowDelimiter&&(this.info.lines++,this.state.wasRowDelimiter=!1)}__onRecord(){const{columns:t,columns_duplicates_to_array:e,encoding:i,info:n,from:o,relax_column_count:r,relax_column_count_less:s,relax_column_count_more:a,raw:f,skip_lines_with_empty_values:c}=this.options,{enabled:u,record:h}=this.state;if(!1===u)return this.__resetRecord();const m=h.length;if(!0===t)return _(h)?void this.__resetRecord():this.__firstLineToColumns(h);if(!1===t&&0===this.info.records&&(this.state.expectedRecordLength=m),m!==this.state.expectedRecordLength){const e=!1===t?new l(\"CSV_INCONSISTENT_RECORD_LENGTH\",[\"Invalid Record Length:\",`expect ${this.state.expectedRecordLength},`,`got ${m} on line ${this.info.lines}`],this.options,this.__context(),{record:h}):new l(\"CSV_RECORD_DONT_MATCH_COLUMNS_LENGTH\",[\"Invalid Record Length:\",`columns length is ${t.length},`,`got ${m} on line ${this.info.lines}`],this.options,this.__context(),{record:h});if(!0===r||!0===s&&m<this.state.expectedRecordLength||!0===a&&m>this.state.expectedRecordLength)this.info.invalid_field_length++,this.state.error=e;else{const t=this.__error(e);if(t)return t}}if(!0===c&&_(h))this.__resetRecord();else{if(!0===this.state.recordHasError)return this.__resetRecord(),void(this.state.recordHasError=!1);if(this.info.records++,1===o||this.info.records>=o)if(!1!==t){const o={};for(let i=0,n=h.length;i<n;i++)void 0===t[i]||t[i].disabled||(o[t[i].name]=!0===e&&o[t[i].name]?Array.isArray(o[t[i].name])?o[t[i].name].concat(h[i]):[o[t[i].name],h[i]]:h[i]);const{objname:r}=this.options;if(void 0===r)if(!0===f||!0===n){const t=this.__push(Object.assign({record:o},!0===f?{raw:this.state.rawBuffer.toString(i)}:{},!0===n?{info:this.state.info}:{}));if(t)return t}else{const t=this.__push(o);if(t)return t}else if(!0===f||!0===n){const t=this.__push(Object.assign({record:[o[r],o]},!0===f?{raw:this.state.rawBuffer.toString(i)}:{},!0===n?{info:this.state.info}:{}));if(t)return t}else{const t=this.__push([o[r],o]);if(t)return t}}else if(!0===f||!0===n){const t=this.__push(Object.assign({record:h},!0===f?{raw:this.state.rawBuffer.toString(i)}:{},!0===n?{info:this.state.info}:{}));if(t)return t}else{const t=this.__push(h);if(t)return t}this.__resetRecord()}}__firstLineToColumns(t){const{firstLineToHeaders:e}=this.state;try{const i=void 0===e?t:e.call(null,t);if(!Array.isArray(i))return this.__error(new l(\"CSV_INVALID_COLUMN_MAPPING\",[\"Invalid Column Mapping:\",\"expect an array from column function,\",`got ${JSON.stringify(i)}`],this.options,this.__context(),{headers:i}));const n=u(i);return this.state.expectedRecordLength=n.length,this.options.columns=n,void this.__resetRecord()}catch(t){return t}}__resetRecord(){!0===this.options.raw&&this.state.rawBuffer.reset(),this.state.error=void 0,this.state.record=[],this.state.record_length=0}__onField(){const{cast:t,encoding:e,rtrim:i,max_record_size:n}=this.options,{enabled:o,wasQuoting:r}=this.state;if(!1===o)return this.__resetField();let s=this.state.field.toString(e);if(!0===i&&!1===r&&(s=s.trimRight()),!0===t){const[t,e]=this.__cast(s);if(void 0!==t)return t;s=e}this.state.record.push(s),0!==n&&\"string\"==typeof s&&(this.state.record_length+=s.length),this.__resetField()}__resetField(){this.state.field.reset(),this.state.wasQuoting=!1}__push(t){const{on_record:e}=this.options;if(void 0!==e){const i=this.__context();try{t=e.call(null,t,i)}catch(t){return t}if(null==t)return}this.push(t)}__cast(t){const{columns:e,relax_column_count:i}=this.options;if(!0===Array.isArray(e)&&i&&this.options.columns.length<=this.state.record.length)return[void 0,void 0];const n=this.__context();if(null!==this.state.castField)try{return[void 0,this.state.castField.call(null,t,n)]}catch(t){return[t]}return this.__isFloat(t)?[void 0,parseFloat(t)]:!1!==this.options.cast_date?[void 0,this.options.cast_date.call(null,t,n)]:[void 0,t]}__isCharTrimable(t){return 32===t||9===t||13===t||10===t||12===t}__isFloat(t){return t-parseFloat(t)+1>=0}__compareBytes(t,e,i,n){if(t[0]!==n)return 0;const o=t.length;for(let n=1;n<o;n++)if(t[n]!==e[i+n])return 0;return o}__needMoreData(t,e,i){if(i)return!1;const{quote:n}=this.options,{quoting:o,needMoreDataSize:r,recordDelimiterMaxLength:s}=this.state;return e-t-1<Math.max(r,s,o?n.length+s:0)}__isDelimiter(t,e,i){const{delimiter:n,ignore_last_delimiters:o}=this.options;if(!0===o&&this.state.record.length===this.options.columns.length-1)return 0;if(!1!==o&&\"number\"==typeof o&&this.state.record.length===o-1)return 0;t:for(let o=0;o<n.length;o++){const r=n[o];if(r[0]===i){for(let i=1;i<r.length;i++)if(r[i]!==t[e+i])continue t;return r.length}}return 0}__isRecordDelimiter(t,e,i){const{record_delimiter:n}=this.options,o=n.length;t:for(let r=0;r<o;r++){const o=n[r],s=o.length;if(o[0]===t){for(let t=1;t<s;t++)if(o[t]!==e[i+t])continue t;return o.length}}return 0}__isEscape(t,e,i){const{escape:n}=this.options;if(null===n)return!1;const o=n.length;if(n[0]===i){for(let i=0;i<o;i++)if(n[i]!==t[e+i])return!1;return!0}return!1}__isQuote(t,e){const{quote:i}=this.options;if(null===i)return!1;const n=i.length;for(let o=0;o<n;o++)if(i[o]!==t[e+o])return!1;return!0}__autoDiscoverRecordDelimiter(t,e){const{encoding:i}=this.options,n=t[e];return 13===n?10===t[e+1]?(this.options.record_delimiter.push(Buffer.from(\"\\r\\n\",i)),this.state.recordDelimiterMaxLength=2,2):(this.options.record_delimiter.push(Buffer.from(\"\\r\",i)),this.state.recordDelimiterMaxLength=1,1):10===n?(this.options.record_delimiter.push(Buffer.from(\"\\n\",i)),this.state.recordDelimiterMaxLength=1,1):0}__error(t){const{skip_lines_with_error:e}=this.options,i=\"string\"==typeof t?new Error(t):t;return e?(this.state.recordHasError=!0,void this.emit(\"skip\",i)):i}__context(){const{columns:t}=this.options;return{column:!0===Array.isArray(t)?t.length>this.state.record.length?t[this.state.record.length].name:null:this.state.record.length,empty_lines:this.info.empty_lines,error:this.state.error,header:!0===t,index:this.state.record.length,invalid_field_length:this.info.invalid_field_length,quoting:this.state.wasQuoting,lines:this.info.lines,records:this.info.records}}}const s=function(){let t,e,i;for(let n in arguments){const o=arguments[n],r=typeof o;if(void 0!==t||\"string\"!=typeof o&&!Buffer.isBuffer(o))if(void 0===e&&c(o))e=o;else{if(void 0!==i||\"function\"!==r)throw new l(\"CSV_INVALID_ARGUMENT\",[\"Invalid argument:\",`got ${JSON.stringify(o)} at index ${n}`],this.options);i=o}else t=o}const n=new r(e);if(i){const t=void 0===e||void 0===e.objname?[]:{};n.on(\"readable\",function(){let i;for(;null!==(i=this.read());)void 0===e||void 0===e.objname?t.push(i):t[i[0]]=i[1]}),n.on(\"error\",function(t){i(t,void 0,n.info)}),n.on(\"end\",function(){i(void 0,t,n.info)})}return void 0!==t&&(\"function\"==typeof setImmediate?setImmediate(function(){n.write(t),n.end()}):(n.write(t),n.end())),n};class l extends Error{constructor(t,e,i,...n){Array.isArray(e)&&(e=e.join(\" \")),super(e),void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,l),this.code=t;for(const t of n)for(const e in t){const n=t[e];this[e]=Buffer.isBuffer(n)?n.toString(i.encoding):null==n?n:JSON.parse(JSON.stringify(n))}}}s.Parser=r,s.CsvError=l;var a=s;const f=function(t){return t.replace(/([A-Z])/g,function(t,e){return\"_\"+e.toLowerCase()})},c=function(t){return\"object\"==typeof t&&null!==t&&!Array.isArray(t)},_=function(t){return t.every(t=>null==t||t.toString&&\"\"===t.toString().trim())},u=function(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];if(null==n||!1===n)e[i]={disabled:!0};else if(\"string\"==typeof n)e[i]={name:n};else{if(!c(n))throw new l(\"CSV_INVALID_COLUMN_DEFINITION\",[\"Invalid column definition:\",\"expect a string or a literal object,\",`got ${JSON.stringify(n)} at position ${i}`]);if(\"string\"!=typeof n.name)throw new l(\"CSV_OPTION_COLUMNS_MISSING_NAME\",[\"Option columns missing name:\",`property \"name\" is required at position ${i}`,\"when column is an object literal\"]);e[i]=n}}return e};var h=function(t,e={}){\"string\"==typeof t&&(t=Buffer.from(t));const i=e&&e.objname?{}:[],n=new a.Parser(e);n.push=function(t){null!==t&&(void 0===e.objname?i.push(t):i[t[0]]=t[1])};const o=n.__parse(t,!1);if(void 0!==o)throw o;const r=n.__parse(void 0,!0);if(void 0!==r)throw r;return i},m=function(t){return t.split(/\\s+/)},d={CardScores:{__proto__:null,parseCsv:function(t){if(h)return h(t);console.warn(\"no csv-parse\");var e=t.split(/\\n+/).map(function(t){return t.trim()}).filter(function(t){return t.length>0}).filter(function(t){return!t.startsWith(\"Card\")}),i=[];return e.forEach(function(t){var e=t.split(\",\");if(3!==e.length)throw new Error('Invalid score row: \"'+t+'\"');var n=e[0],o=e[1];if(\"\"!==n){var r=Number(e[2])||0;i.push({cardTag:n,scoreTag:o,score:r})}}),i},calculateScore:function(t,e,i,n){var o=m(t);console.log(o);var r=m(e),s=m(i),l=[].concat(r,s),a=new Map(o.map(function(t){return[t,\"\"]}));l.forEach(function(t){var e=t.split(\"_\")[0];e?a.has(e)&&a.set(e,t):console.warn('ignoring tag \"'+t+'\" because it has no prefix')});var f=0;return n.forEach(function(t){var e=t.cardTag,i=t.scoreTag,n=t.score;a.has(e)&&a.get(e)===i&&(f+=n)}),f}}};Object.assign(global,{Babblebot:d}),exports.Babblebot=d;\n//# sourceMappingURL=babblebot.js.map\n",
              "parameterObjects": "",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        }
      ],
      "fullName": "importCardScoresJs",
      "functionType": "Action",
      "name": "importCardScoresJs",
      "objectGroups": [
      ],
      "parameters": [
      ],
      "sentence": "importCardScoresJs"
    },
    {
      "description": "rawScoreTable",
      "events": [
        {
          "actions": [
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        },
        {
          "disabled": false,
          "eventsSheetExpanded": false,
          "folded": false,
          "inlineCode": "eventsFunctionContext.returnValue = `\nCard Tag,Tag,Result\nagree,agree_good,20\nagree,agree_bad,-7\nagree,,2\ndisagree,disagree_good,20\ndisagree,disagree_bad,-14\ndisagree,,-4\nlisten,listen_good,10\nlisten,listen_bad,-7\nlisten,,3\nsports,sports_good,10\nsports,sports_bad,-14\nsports,,3\nart,art_good,10\nart,art_bad,-7\nart,,-4\nappearance,appearance_good,14\nappearance,appearance_bad,-14\nappearance,,3\nbrains,brains_good,20\nbrains,brains_bad,-10\nbrains,,3\nbehavior,behavior_good,10\nbehavior,behavior_bad,-10\nbehavior,,1\nfamily,family_good,6\nfamily,family_bad,-14\nfamily,,3\njob,job_good,6\njob,job_bad,-10\njob,,3\neducation,education_good,6\neducation,education_bad,-7\neducation,,0\nhobbies,hobbies_good,10\nhobbies,hobbies_bad,-4\nhobbies,,0\npolitics,politics_good,13\npolitics,politics_bad,-14\npolitics,,-4\nflattery,flattery_good,6\nflattery,flattery_bad,-10\nflattery,,3\naggression,aggression_good,6\naggression,aggression_bad,-14\naggression,,0\nquestion,question_good,8\nquestion,question_bad,-4\nquestion,,0\nnonsequitor,nonsequitor_good,3\nnonsequitor,nonsequitor_bad,-14\nnonsequitor,,-4\nempathy,empathy_good,6\nempathy,empathy_bad,-4\nempathy,,0\nsympathy,sympathy_good,10\nsympathy,sympathy_bad,-14\nsympathy,,-4\n`",
          "parameterObjects": "",
          "type": "BuiltinCommonInstructions::JsCode",
          "useStrict": true
        }
      ],
      "fullName": "rawScoreTable",
      "functionType": "StringExpression",
      "name": "rawScoreTable",
      "objectGroups": [
      ],
      "parameters": [
      ],
      "sentence": ""
    },
    {
      "description": "parseScoreTable",
      "events": [
        {
          "actions": [
          ],
          "conditions": [
            {
              "parameters": [
              ],
              "subInstructions": [
              ],
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              }
            }
          ],
          "disabled": false,
          "events": [
            {
              "actions": [
                {
                  "parameters": [
                    "",
                    ""
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "decking::importCardScoresJs"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "actions": [
                {
                  "parameters": [
                    "RawScoreTable",
                    "=",
                    "decking::rawScoreTable()"
                  ],
                  "subInstructions": [
                  ],
                  "type": {
                    "inverted": false,
                    "value": "ModVarSceneTxt"
                  }
                }
              ],
              "conditions": [
              ],
              "disabled": false,
              "events": [
              ],
              "folded": false,
              "type": "BuiltinCommonInstructions::Standard"
            },
            {
              "disabled": false,
              "eventsSheetExpanded": false,
              "folded": false,
              "inlineCode": "const rawScoreTable = runtimeScene.getVariables().get(\"RawScoreTable\").getAsString()\nif (!rawScoreTable) {\n    console.error(\"Oh no no score table!\")\n    return\n}\nconst CS = global.ssangervasi.cardScores\nconst scoreTable = CS.parseCsv(rawScoreTable)\nglobal.ssangervasi.scoreTable = scoreTable",
              "parameterObjects": "",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        }
      ],
      "fullName": "parseScoreTable",
      "functionType": "Action",
      "name": "parseScoreTable",
      "objectGroups": [
      ],
      "parameters": [
      ],
      "sentence": "parseScoreTable"
    },
    {
      "description": "calculateScore",
      "events": [
        {
          "actions": [
            {
              "parameters": [
                "",
                ""
              ],
              "subInstructions": [
              ],
              "type": {
                "inverted": false,
                "value": "decking::parseScoreTable"
              }
            }
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        },
        {
          "actions": [
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        },
        {
          "disabled": false,
          "eventsSheetExpanded": false,
          "folded": false,
          "inlineCode": "// const rawScoreTable = runtimeScene.getVariables().get(\"RawScoreTable\").getAsString()\nconst cardTags = eventsFunctionContext.getArgument('CardTags')\nconst characterTags = eventsFunctionContext.getArgument('CharacterTags')\nlet nodeTags = eventsFunctionContext.getArgument('NodeTags')\n\nnodeTags = nodeTags.split(/,+/).join(' ')\n\nconsole.log('calculating score', {\n    cardTags,\n    characterTags,\n    nodeTags\n})\n\neventsFunctionContext.returnValue = (() => {\n    const CS = global.ssangervasi.cardScores\n    const scoreTable = global.ssangervasi.scoreTable\n    if (!(CS && scoreTable)) {\n        console.error(\"Oh no no libs or data!\", {CS, scoreTable})\n        return 0\n    }\n    return CS.calculateScore(\n        cardTags,\n        characterTags,\n        nodeTags,\n        scoreTable\n    )\n})()\n",
          "parameterObjects": "",
          "type": "BuiltinCommonInstructions::JsCode",
          "useStrict": true
        },
        {
          "actions": [
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        }
      ],
      "fullName": "calculateScore",
      "functionType": "Expression",
      "name": "calculateScore",
      "objectGroups": [
      ],
      "parameters": [
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "CardTags",
          "longDescription": "",
          "name": "CardTags",
          "optional": false,
          "supplementaryInformation": "Sprite",
          "type": "string"
        },
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "CharacterTags",
          "longDescription": "",
          "name": "CharacterTags",
          "optional": false,
          "supplementaryInformation": "",
          "type": "string"
        },
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "NodeTags",
          "longDescription": "",
          "name": "NodeTags",
          "optional": false,
          "supplementaryInformation": "",
          "type": "string"
        }
      ],
      "sentence": "calculateScore"
    },
    {
      "description": "importCards",
      "events": [
        {
          "actions": [
          ],
          "conditions": [
            {
              "parameters": [
              ],
              "subInstructions": [
              ],
              "type": {
                "inverted": false,
                "value": "BuiltinCommonInstructions::Once"
              }
            }
          ],
          "disabled": false,
          "events": [
            {
              "disabled": false,
              "eventsSheetExpanded": true,
              "folded": false,
              "inlineCode": "global.ssangervasi.cards = [\n  {\n    \"Card Id\": \"give_compliment\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"I look forward to learning information about you.\",\n    \"Card Special Tags\": \"flattery nonsequitor\"\n  },\n  {\n    \"Card Id\": \"respond_emotionally\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"That information provokes an emotional response in me.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"learn_more\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Please provide more data points or logic to help me understand you.\",\n    \"Card Special Tags\": \"question\"\n  },\n  {\n    \"Card Id\": \"indicate_agreement\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"Yes, my understanding of that information aligns with your own.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"talk_about_self\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"That reminds me of a time when I...\",\n    \"Card Special Tags\": \"nonsequitor\"\n  },\n  {\n    \"Card Id\": \"compliment_appearance\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"Your three-dimensional form trigers pleasure responses in my brain.\",\n    \"Card Special Tags\": \"flattery  appearance  nonsequitor\"\n  },\n  {\n    \"Card Id\": \"compliment_intellect\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"You are likely above the average intelligence for your age and species.\",\n    \"Card Special Tags\": \"flattery  nonsequitor\"\n  },\n  {\n    \"Card Id\": \"compliment_behavior\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"Your behavior is appropriate for the social context of this date.\",\n    \"Card Special Tags\": \"flattery  nonsequitor\"\n  },\n  {\n    \"Card Id\": \"compliment_style\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"The garment you are wearing complements your facial features nicely.\",\n    \"Card Special Tags\": \"flattery  appearance  nonsequitor\"\n  },\n  {\n    \"Card Id\": \"compliment_social_standing\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"Your attractive dating qualities certainly must put you in high demand.\",\n    \"Card Special Tags\": \"flattery  nonsequitor  aggressive\"\n  },\n  {\n    \"Card Id\": \"express_gratitude\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"I appreciate the information you have shared with me\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"express_empathy\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"My understanding of your feelings is informed by my similar experiences.\",\n    \"Card Special Tags\": \"empathy\"\n  },\n  {\n    \"Card Id\": \"express_sympathy\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"I understand your experience to have been negative and feel sorrow for you.\",\n    \"Card Special Tags\": \"sympathy\"\n  },\n  {\n    \"Card Id\": \"express_disdain\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"That information or behavior is unacceptable for the context it is in.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"break_ice_weather\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Are you amazed by the cyclical progression of natural phenomena?\",\n    \"Card Special Tags\": \"question  nonsequitor\"\n  },\n  {\n    \"Card Id\": \"break_ice_hobbies\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Do we engage in the same common recreational activities?\",\n    \"Card Special Tags\": \"hobbies\"\n  },\n  {\n    \"Card Id\": \"break_ice_sports\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Are you happy or sad that the paid athletes recently won/lost a game?\",\n    \"Card Special Tags\": \"sports\"\n  },\n  {\n    \"Card Id\": \"break_ice_politics\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Describe your opinion on the system making the decisions that govern your life.\",\n    \"Card Special Tags\": \"politics\"\n  },\n  {\n    \"Card Id\": \"change_subject\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"I don't really want to talk about this.\",\n    \"Card Special Tags\": \"nonsequitor\"\n  },\n  {\n    \"Card Id\": \"learn_more_personal\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"I would like to know more information that describes your unique persona\",\n    \"Card Special Tags\": \"question\"\n  },\n  {\n    \"Card Id\": \"learn_more_family\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"Do you associate positive emotions with the life forms you are related to??\",\n    \"Card Special Tags\": \"question  family\"\n  },\n  {\n    \"Card Id\": \"learn_more_job\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"What is the activity or service that you provide in exchange for currency?\",\n    \"Card Special Tags\": \"question  job\"\n  },\n  {\n    \"Card Id\": \"learn_more_education\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"Did you exchange currency for information at a learning institution?\",\n    \"Card Special Tags\": \"question  education\"\n  },\n  {\n    \"Card Id\": \"learn_more_hobbies\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"Describe your regular recreational activities.\",\n    \"Card Special Tags\": \"question  hobbies\"\n  },\n  {\n    \"Card Id\": \"agree_softly\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"Although my own opinion is uninformed, I trust your judgement on that information.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"agree_neutral\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"I neither condemn nor endorse your opinion.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"agree_strongly\",\n    \"Card Type\": \"agree\",\n    \"Actual Card Text\": \"We have agreed on information/behavior that is core to my understanding of myself.\",\n    \"Card Special Tags\": \"aggression\"\n  },\n  {\n    \"Card Id\": \"disagree_neutral\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"We're all entitled to our oponions.\",\n    \"Card Special Tags\": \"\"\n  },\n  {\n    \"Card Id\": \"disagree_strongly\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"That opinion/behavior provokes an intense negative emotion in me.\",\n    \"Card Special Tags\": \"aggression\"\n  },\n  {\n    \"Card Id\": \"change_subject\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"Tell me something else about you.\",\n    \"Card Special Tags\": \"nonsequitor\"\n  },\n  {\n    \"Card Id\": \"provide_information_family\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"My related life forms have had the following impact on my development...\",\n    \"Card Special Tags\": \"nonsequitor  family\"\n  },\n  {\n    \"Card Id\": \"provide_information_job\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"These are some difficulties I have had while exchanging services for curency...\",\n    \"Card Special Tags\": \"nonsequitor  job\"\n  },\n  {\n    \"Card Id\": \"provide_information_hobbies\",\n    \"Card Type\": \"listen\",\n    \"Actual Card Text\": \"When I am not eating, sleeping, or working, I spend my time on...\",\n    \"Card Special Tags\": \"nonsequitor  hobbies\"\n  },\n  {\n    \"Card Id\": \"clarifying_question\",\n    \"Card Type\": \"disagree\",\n    \"Actual Card Text\": \"Please remind me of information I have forgotten from your dating profile or previous statements.\",\n    \"Card Special Tags\": \"question\"\n  }\n]",
              "parameterObjects": "",
              "type": "BuiltinCommonInstructions::JsCode",
              "useStrict": true
            }
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        }
      ],
      "fullName": "importCards",
      "functionType": "Action",
      "name": "importCards",
      "objectGroups": [
      ],
      "parameters": [
      ],
      "sentence": "importCards"
    },
    {
      "description": "createCards",
      "events": [
        {
          "actions": [
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        },
        {
          "disabled": false,
          "eventsSheetExpanded": true,
          "folded": false,
          "inlineCode": "const ID = \"Card Id\"\nconst TYPE = \"Card Type\"\nconst TEXT = \"Actual Card Text\"\nconst TAGS = \"Card Special Tags\"\n\nglobal.ssangervasi.cards.forEach((data) => {\n    const obj = runtimeScene.createObject(\"Card\")\n    const vars = obj.getVariables()\n    vars.get(\"Id\").setString(data[ID])\n    vars.get(\"Type\").setString(data[TYPE])\n    vars.get(\"Text\").setString(data[TEXT])\n    vars.get(\"Tags\").setString(data[TYPE] + ' ' + data[TAGS])\n})",
          "parameterObjects": "",
          "type": "BuiltinCommonInstructions::JsCode",
          "useStrict": true
        }
      ],
      "fullName": "createCards",
      "functionType": "Action",
      "name": "createCards",
      "objectGroups": [
      ],
      "parameters": [
      ],
      "sentence": "createCards"
    },
    {
      "description": "botText _PARAM0_ ",
      "events": [
        {
          "actions": [
            {
              "parameters": [
                "",
                ""
              ],
              "subInstructions": [
              ],
              "type": {
                "inverted": false,
                "value": "utils::importLodash"
              }
            }
          ],
          "conditions": [
          ],
          "disabled": false,
          "events": [
          ],
          "folded": false,
          "type": "BuiltinCommonInstructions::Standard"
        },
        {
          "disabled": false,
          "eventsSheetExpanded": true,
          "folded": false,
          "inlineCode": "const text = eventsFunctionContext.getArgument('Text') || ''\nconst characterTags = eventsFunctionContext.getArgument('Confidence') || 0\n\nconst words = text.split(/\\s+/)\nconst digitWords = (\n    words\n    .map(\n        w => w.split(/./).map(_ => Math.random() < .5 ? '0' : '1').join('')\n    )\n)\neventsFunctionContext.returnValue = digitWords.join(' ')",
          "parameterObjects": "",
          "type": "BuiltinCommonInstructions::JsCode",
          "useStrict": true
        }
      ],
      "fullName": "botText",
      "functionType": "StringExpression",
      "name": "botText",
      "objectGroups": [
      ],
      "parameters": [
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "Text",
          "longDescription": "",
          "name": "Text",
          "optional": false,
          "supplementaryInformation": "",
          "type": "string"
        },
        {
          "codeOnly": false,
          "defaultValue": "",
          "description": "Confidence",
          "longDescription": "",
          "name": "Confidence",
          "optional": false,
          "supplementaryInformation": "",
          "type": "expression"
        }
      ],
      "sentence": ""
    }
  ],
  "extensionNamespace": "",
  "fullName": "",
  "helpPath": "",
  "iconUrl": "",
  "name": "decking",
  "previewIconUrl": "",
  "shortDescription": "",
  "tags": [
    ""
  ],
  "version": ""
}